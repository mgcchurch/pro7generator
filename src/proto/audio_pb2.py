# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: audio.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import basicTypes_pb2 as basicTypes__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='audio.proto',
  package='rv.data',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x0b\x61udio.proto\x12\x07rv.data\x1a\x10\x62\x61sicTypes.proto\"\xaa\x08\n\x05\x41udio\x1a\x8d\x01\n\x10SettingsDocument\x12\x30\n\x0coutput_setup\x18\x01 \x01(\x0b\x32\x1a.rv.data.Audio.OutputSetup\x12-\n\x0emonitor_device\x18\x02 \x01(\x0b\x32\x15.rv.data.Audio.Device\x12\x18\n\x10monitor_on_mains\x18\x03 \x01(\x08\x1a\xf5\x01\n\x0bOutputSetup\x12\x1b\n\x04uuid\x18\x01 \x01(\x0b\x32\r.rv.data.UUID\x12+\n\x0c\x61udio_device\x18\x02 \x01(\x0b\x32\x15.rv.data.Audio.Device\x12\x37\n\x10logical_channels\x18\x03 \x03(\x0b\x32\x1d.rv.data.Audio.LogicalChannel\x12\x13\n\x0b\x61udio_delay\x18\x04 \x01(\x01\x12\x14\n\x0cmaster_level\x18\x05 \x01(\x01\x12\x38\n\x10physical_chanels\x18\x06 \x03(\x0b\x32\x1e.rv.data.Audio.PhysicalChannel\x1a\x9c\x02\n\x06\x44\x65vice\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x10\n\x08renderID\x18\x02 \x01(\t\x12\x1b\n\x13input_channel_count\x18\x03 \x01(\r\x12\x1c\n\x14output_channel_count\x18\x04 \x01(\r\x12-\n\x07\x66ormats\x18\x05 \x03(\x0b\x32\x1c.rv.data.Audio.Device.Format\x1a\x87\x01\n\x06\x46ormat\x12\x13\n\x0bsample_rate\x18\x01 \x01(\r\x12\x11\n\tbit_depth\x18\x02 \x01(\r\x12/\n\x04type\x18\x03 \x01(\x0e\x32!.rv.data.Audio.Device.Format.Type\"$\n\x04Type\x12\x0c\n\x08TYPE_INT\x10\x00\x12\x0e\n\nTYPE_FLOAT\x10\x01\x1a\x98\x02\n\x0eLogicalChannel\x12\x1b\n\x04uuid\x18\x01 \x01(\x0b\x32\r.rv.data.UUID\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\r\n\x05index\x18\x03 \x01(\r\x12\r\n\x05muted\x18\x04 \x01(\x08\x12L\n\x17physical_audio_channels\x18\x05 \x03(\x0b\x32+.rv.data.Audio.LogicalChannel.OutputChannel\x12\x0c\n\x04solo\x18\x06 \x01(\x08\x12\x11\n\ttest_tone\x18\x07 \x01(\x08\x1aN\n\rOutputChannel\x12\r\n\x05index\x18\x01 \x01(\r\x12\r\n\x05muted\x18\x02 \x01(\x08\x12\x0c\n\x04solo\x18\x03 \x01(\x08\x12\x11\n\ttest_tone\x18\x04 \x01(\x08\x1a_\n\x0fPhysicalChannel\x12\r\n\x05index\x18\x01 \x01(\r\x12\x13\n\x0bmute_enable\x18\x02 \x01(\x08\x12\x13\n\x0bsolo_enable\x18\x03 \x01(\x08\x12\x13\n\x0btone_enable\x18\x04 \x01(\x08\x62\x06proto3'
  ,
  dependencies=[basicTypes__pb2.DESCRIPTOR,])



_AUDIO_DEVICE_FORMAT_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='rv.data.Audio.Device.Format.Type',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='TYPE_INT', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='TYPE_FLOAT', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=693,
  serialized_end=729,
)
_sym_db.RegisterEnumDescriptor(_AUDIO_DEVICE_FORMAT_TYPE)


_AUDIO_SETTINGSDOCUMENT = _descriptor.Descriptor(
  name='SettingsDocument',
  full_name='rv.data.Audio.SettingsDocument',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='output_setup', full_name='rv.data.Audio.SettingsDocument.output_setup', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='monitor_device', full_name='rv.data.Audio.SettingsDocument.monitor_device', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='monitor_on_mains', full_name='rv.data.Audio.SettingsDocument.monitor_on_mains', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=53,
  serialized_end=194,
)

_AUDIO_OUTPUTSETUP = _descriptor.Descriptor(
  name='OutputSetup',
  full_name='rv.data.Audio.OutputSetup',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='uuid', full_name='rv.data.Audio.OutputSetup.uuid', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='audio_device', full_name='rv.data.Audio.OutputSetup.audio_device', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='logical_channels', full_name='rv.data.Audio.OutputSetup.logical_channels', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='audio_delay', full_name='rv.data.Audio.OutputSetup.audio_delay', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='master_level', full_name='rv.data.Audio.OutputSetup.master_level', index=4,
      number=5, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='physical_chanels', full_name='rv.data.Audio.OutputSetup.physical_chanels', index=5,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=197,
  serialized_end=442,
)

_AUDIO_DEVICE_FORMAT = _descriptor.Descriptor(
  name='Format',
  full_name='rv.data.Audio.Device.Format',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='sample_rate', full_name='rv.data.Audio.Device.Format.sample_rate', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='bit_depth', full_name='rv.data.Audio.Device.Format.bit_depth', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='type', full_name='rv.data.Audio.Device.Format.type', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _AUDIO_DEVICE_FORMAT_TYPE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=594,
  serialized_end=729,
)

_AUDIO_DEVICE = _descriptor.Descriptor(
  name='Device',
  full_name='rv.data.Audio.Device',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='rv.data.Audio.Device.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='renderID', full_name='rv.data.Audio.Device.renderID', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='input_channel_count', full_name='rv.data.Audio.Device.input_channel_count', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='output_channel_count', full_name='rv.data.Audio.Device.output_channel_count', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='formats', full_name='rv.data.Audio.Device.formats', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_AUDIO_DEVICE_FORMAT, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=445,
  serialized_end=729,
)

_AUDIO_LOGICALCHANNEL_OUTPUTCHANNEL = _descriptor.Descriptor(
  name='OutputChannel',
  full_name='rv.data.Audio.LogicalChannel.OutputChannel',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='index', full_name='rv.data.Audio.LogicalChannel.OutputChannel.index', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='muted', full_name='rv.data.Audio.LogicalChannel.OutputChannel.muted', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='solo', full_name='rv.data.Audio.LogicalChannel.OutputChannel.solo', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='test_tone', full_name='rv.data.Audio.LogicalChannel.OutputChannel.test_tone', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=934,
  serialized_end=1012,
)

_AUDIO_LOGICALCHANNEL = _descriptor.Descriptor(
  name='LogicalChannel',
  full_name='rv.data.Audio.LogicalChannel',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='uuid', full_name='rv.data.Audio.LogicalChannel.uuid', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='name', full_name='rv.data.Audio.LogicalChannel.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='index', full_name='rv.data.Audio.LogicalChannel.index', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='muted', full_name='rv.data.Audio.LogicalChannel.muted', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='physical_audio_channels', full_name='rv.data.Audio.LogicalChannel.physical_audio_channels', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='solo', full_name='rv.data.Audio.LogicalChannel.solo', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='test_tone', full_name='rv.data.Audio.LogicalChannel.test_tone', index=6,
      number=7, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_AUDIO_LOGICALCHANNEL_OUTPUTCHANNEL, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=732,
  serialized_end=1012,
)

_AUDIO_PHYSICALCHANNEL = _descriptor.Descriptor(
  name='PhysicalChannel',
  full_name='rv.data.Audio.PhysicalChannel',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='index', full_name='rv.data.Audio.PhysicalChannel.index', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='mute_enable', full_name='rv.data.Audio.PhysicalChannel.mute_enable', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='solo_enable', full_name='rv.data.Audio.PhysicalChannel.solo_enable', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='tone_enable', full_name='rv.data.Audio.PhysicalChannel.tone_enable', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1014,
  serialized_end=1109,
)

_AUDIO = _descriptor.Descriptor(
  name='Audio',
  full_name='rv.data.Audio',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_AUDIO_SETTINGSDOCUMENT, _AUDIO_OUTPUTSETUP, _AUDIO_DEVICE, _AUDIO_LOGICALCHANNEL, _AUDIO_PHYSICALCHANNEL, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=43,
  serialized_end=1109,
)

_AUDIO_SETTINGSDOCUMENT.fields_by_name['output_setup'].message_type = _AUDIO_OUTPUTSETUP
_AUDIO_SETTINGSDOCUMENT.fields_by_name['monitor_device'].message_type = _AUDIO_DEVICE
_AUDIO_SETTINGSDOCUMENT.containing_type = _AUDIO
_AUDIO_OUTPUTSETUP.fields_by_name['uuid'].message_type = basicTypes__pb2._UUID
_AUDIO_OUTPUTSETUP.fields_by_name['audio_device'].message_type = _AUDIO_DEVICE
_AUDIO_OUTPUTSETUP.fields_by_name['logical_channels'].message_type = _AUDIO_LOGICALCHANNEL
_AUDIO_OUTPUTSETUP.fields_by_name['physical_chanels'].message_type = _AUDIO_PHYSICALCHANNEL
_AUDIO_OUTPUTSETUP.containing_type = _AUDIO
_AUDIO_DEVICE_FORMAT.fields_by_name['type'].enum_type = _AUDIO_DEVICE_FORMAT_TYPE
_AUDIO_DEVICE_FORMAT.containing_type = _AUDIO_DEVICE
_AUDIO_DEVICE_FORMAT_TYPE.containing_type = _AUDIO_DEVICE_FORMAT
_AUDIO_DEVICE.fields_by_name['formats'].message_type = _AUDIO_DEVICE_FORMAT
_AUDIO_DEVICE.containing_type = _AUDIO
_AUDIO_LOGICALCHANNEL_OUTPUTCHANNEL.containing_type = _AUDIO_LOGICALCHANNEL
_AUDIO_LOGICALCHANNEL.fields_by_name['uuid'].message_type = basicTypes__pb2._UUID
_AUDIO_LOGICALCHANNEL.fields_by_name['physical_audio_channels'].message_type = _AUDIO_LOGICALCHANNEL_OUTPUTCHANNEL
_AUDIO_LOGICALCHANNEL.containing_type = _AUDIO
_AUDIO_PHYSICALCHANNEL.containing_type = _AUDIO
DESCRIPTOR.message_types_by_name['Audio'] = _AUDIO
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Audio = _reflection.GeneratedProtocolMessageType('Audio', (_message.Message,), {

  'SettingsDocument' : _reflection.GeneratedProtocolMessageType('SettingsDocument', (_message.Message,), {
    'DESCRIPTOR' : _AUDIO_SETTINGSDOCUMENT,
    '__module__' : 'audio_pb2'
    # @@protoc_insertion_point(class_scope:rv.data.Audio.SettingsDocument)
    })
  ,

  'OutputSetup' : _reflection.GeneratedProtocolMessageType('OutputSetup', (_message.Message,), {
    'DESCRIPTOR' : _AUDIO_OUTPUTSETUP,
    '__module__' : 'audio_pb2'
    # @@protoc_insertion_point(class_scope:rv.data.Audio.OutputSetup)
    })
  ,

  'Device' : _reflection.GeneratedProtocolMessageType('Device', (_message.Message,), {

    'Format' : _reflection.GeneratedProtocolMessageType('Format', (_message.Message,), {
      'DESCRIPTOR' : _AUDIO_DEVICE_FORMAT,
      '__module__' : 'audio_pb2'
      # @@protoc_insertion_point(class_scope:rv.data.Audio.Device.Format)
      })
    ,
    'DESCRIPTOR' : _AUDIO_DEVICE,
    '__module__' : 'audio_pb2'
    # @@protoc_insertion_point(class_scope:rv.data.Audio.Device)
    })
  ,

  'LogicalChannel' : _reflection.GeneratedProtocolMessageType('LogicalChannel', (_message.Message,), {

    'OutputChannel' : _reflection.GeneratedProtocolMessageType('OutputChannel', (_message.Message,), {
      'DESCRIPTOR' : _AUDIO_LOGICALCHANNEL_OUTPUTCHANNEL,
      '__module__' : 'audio_pb2'
      # @@protoc_insertion_point(class_scope:rv.data.Audio.LogicalChannel.OutputChannel)
      })
    ,
    'DESCRIPTOR' : _AUDIO_LOGICALCHANNEL,
    '__module__' : 'audio_pb2'
    # @@protoc_insertion_point(class_scope:rv.data.Audio.LogicalChannel)
    })
  ,

  'PhysicalChannel' : _reflection.GeneratedProtocolMessageType('PhysicalChannel', (_message.Message,), {
    'DESCRIPTOR' : _AUDIO_PHYSICALCHANNEL,
    '__module__' : 'audio_pb2'
    # @@protoc_insertion_point(class_scope:rv.data.Audio.PhysicalChannel)
    })
  ,
  'DESCRIPTOR' : _AUDIO,
  '__module__' : 'audio_pb2'
  # @@protoc_insertion_point(class_scope:rv.data.Audio)
  })
_sym_db.RegisterMessage(Audio)
_sym_db.RegisterMessage(Audio.SettingsDocument)
_sym_db.RegisterMessage(Audio.OutputSetup)
_sym_db.RegisterMessage(Audio.Device)
_sym_db.RegisterMessage(Audio.Device.Format)
_sym_db.RegisterMessage(Audio.LogicalChannel)
_sym_db.RegisterMessage(Audio.LogicalChannel.OutputChannel)
_sym_db.RegisterMessage(Audio.PhysicalChannel)


# @@protoc_insertion_point(module_scope)
